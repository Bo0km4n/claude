// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lr.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PeerJoinRequest struct {
	PeerId               []byte   `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	LocalIp              string   `protobuf:"bytes,2,opt,name=local_ip,json=localIp" json:"local_ip,omitempty"`
	LocalPort            string   `protobuf:"bytes,3,opt,name=local_port,json=localPort" json:"local_port,omitempty"`
	Latitude             float32  `protobuf:"fixed32,4,opt,name=latitude" json:"latitude,omitempty"`
	Longitude            float32  `protobuf:"fixed32,5,opt,name=longitude" json:"longitude,omitempty"`
	Protocol             string   `protobuf:"bytes,6,opt,name=protocol" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerJoinRequest) Reset()         { *m = PeerJoinRequest{} }
func (m *PeerJoinRequest) String() string { return proto.CompactTextString(m) }
func (*PeerJoinRequest) ProtoMessage()    {}
func (*PeerJoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_lr_a41c565595dcb5ae, []int{0}
}
func (m *PeerJoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerJoinRequest.Unmarshal(m, b)
}
func (m *PeerJoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerJoinRequest.Marshal(b, m, deterministic)
}
func (dst *PeerJoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerJoinRequest.Merge(dst, src)
}
func (m *PeerJoinRequest) XXX_Size() int {
	return xxx_messageInfo_PeerJoinRequest.Size(m)
}
func (m *PeerJoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerJoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeerJoinRequest proto.InternalMessageInfo

func (m *PeerJoinRequest) GetPeerId() []byte {
	if m != nil {
		return m.PeerId
	}
	return nil
}

func (m *PeerJoinRequest) GetLocalIp() string {
	if m != nil {
		return m.LocalIp
	}
	return ""
}

func (m *PeerJoinRequest) GetLocalPort() string {
	if m != nil {
		return m.LocalPort
	}
	return ""
}

func (m *PeerJoinRequest) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *PeerJoinRequest) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *PeerJoinRequest) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

type PeerJoinResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerJoinResponse) Reset()         { *m = PeerJoinResponse{} }
func (m *PeerJoinResponse) String() string { return proto.CompactTextString(m) }
func (*PeerJoinResponse) ProtoMessage()    {}
func (*PeerJoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_lr_a41c565595dcb5ae, []int{1}
}
func (m *PeerJoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerJoinResponse.Unmarshal(m, b)
}
func (m *PeerJoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerJoinResponse.Marshal(b, m, deterministic)
}
func (dst *PeerJoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerJoinResponse.Merge(dst, src)
}
func (m *PeerJoinResponse) XXX_Size() int {
	return xxx_messageInfo_PeerJoinResponse.Size(m)
}
func (m *PeerJoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerJoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeerJoinResponse proto.InternalMessageInfo

func (m *PeerJoinResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ExchangeEntriesNotification struct {
	Destinations         []*ProxyEntry `protobuf:"bytes,1,rep,name=destinations" json:"destinations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ExchangeEntriesNotification) Reset()         { *m = ExchangeEntriesNotification{} }
func (m *ExchangeEntriesNotification) String() string { return proto.CompactTextString(m) }
func (*ExchangeEntriesNotification) ProtoMessage()    {}
func (*ExchangeEntriesNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_lr_a41c565595dcb5ae, []int{2}
}
func (m *ExchangeEntriesNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeEntriesNotification.Unmarshal(m, b)
}
func (m *ExchangeEntriesNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeEntriesNotification.Marshal(b, m, deterministic)
}
func (dst *ExchangeEntriesNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeEntriesNotification.Merge(dst, src)
}
func (m *ExchangeEntriesNotification) XXX_Size() int {
	return xxx_messageInfo_ExchangeEntriesNotification.Size(m)
}
func (m *ExchangeEntriesNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeEntriesNotification.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeEntriesNotification proto.InternalMessageInfo

func (m *ExchangeEntriesNotification) GetDestinations() []*ProxyEntry {
	if m != nil {
		return m.Destinations
	}
	return nil
}

type ExchangeEntriesRequest struct {
	Entries              []*PeerEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ExchangeEntriesRequest) Reset()         { *m = ExchangeEntriesRequest{} }
func (m *ExchangeEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*ExchangeEntriesRequest) ProtoMessage()    {}
func (*ExchangeEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_lr_a41c565595dcb5ae, []int{3}
}
func (m *ExchangeEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeEntriesRequest.Unmarshal(m, b)
}
func (m *ExchangeEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeEntriesRequest.Marshal(b, m, deterministic)
}
func (dst *ExchangeEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeEntriesRequest.Merge(dst, src)
}
func (m *ExchangeEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_ExchangeEntriesRequest.Size(m)
}
func (m *ExchangeEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeEntriesRequest proto.InternalMessageInfo

func (m *ExchangeEntriesRequest) GetEntries() []*PeerEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type ExchangeEntriesResponse struct {
	Entries              []*PeerEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ExchangeEntriesResponse) Reset()         { *m = ExchangeEntriesResponse{} }
func (m *ExchangeEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*ExchangeEntriesResponse) ProtoMessage()    {}
func (*ExchangeEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_lr_a41c565595dcb5ae, []int{4}
}
func (m *ExchangeEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeEntriesResponse.Unmarshal(m, b)
}
func (m *ExchangeEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeEntriesResponse.Marshal(b, m, deterministic)
}
func (dst *ExchangeEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeEntriesResponse.Merge(dst, src)
}
func (m *ExchangeEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_ExchangeEntriesResponse.Size(m)
}
func (m *ExchangeEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeEntriesResponse proto.InternalMessageInfo

func (m *ExchangeEntriesResponse) GetEntries() []*PeerEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type GeneratePeerIDRequest struct {
	Seed                 string   `protobuf:"bytes,1,opt,name=seed" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneratePeerIDRequest) Reset()         { *m = GeneratePeerIDRequest{} }
func (m *GeneratePeerIDRequest) String() string { return proto.CompactTextString(m) }
func (*GeneratePeerIDRequest) ProtoMessage()    {}
func (*GeneratePeerIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_lr_a41c565595dcb5ae, []int{5}
}
func (m *GeneratePeerIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneratePeerIDRequest.Unmarshal(m, b)
}
func (m *GeneratePeerIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneratePeerIDRequest.Marshal(b, m, deterministic)
}
func (dst *GeneratePeerIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneratePeerIDRequest.Merge(dst, src)
}
func (m *GeneratePeerIDRequest) XXX_Size() int {
	return xxx_messageInfo_GeneratePeerIDRequest.Size(m)
}
func (m *GeneratePeerIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneratePeerIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GeneratePeerIDRequest proto.InternalMessageInfo

func (m *GeneratePeerIDRequest) GetSeed() string {
	if m != nil {
		return m.Seed
	}
	return ""
}

type GeneratePeerIDResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneratePeerIDResponse) Reset()         { *m = GeneratePeerIDResponse{} }
func (m *GeneratePeerIDResponse) String() string { return proto.CompactTextString(m) }
func (*GeneratePeerIDResponse) ProtoMessage()    {}
func (*GeneratePeerIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_lr_a41c565595dcb5ae, []int{6}
}
func (m *GeneratePeerIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneratePeerIDResponse.Unmarshal(m, b)
}
func (m *GeneratePeerIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneratePeerIDResponse.Marshal(b, m, deterministic)
}
func (dst *GeneratePeerIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneratePeerIDResponse.Merge(dst, src)
}
func (m *GeneratePeerIDResponse) XXX_Size() int {
	return xxx_messageInfo_GeneratePeerIDResponse.Size(m)
}
func (m *GeneratePeerIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneratePeerIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GeneratePeerIDResponse proto.InternalMessageInfo

func (m *GeneratePeerIDResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*PeerJoinRequest)(nil), "proto.PeerJoinRequest")
	proto.RegisterType((*PeerJoinResponse)(nil), "proto.PeerJoinResponse")
	proto.RegisterType((*ExchangeEntriesNotification)(nil), "proto.ExchangeEntriesNotification")
	proto.RegisterType((*ExchangeEntriesRequest)(nil), "proto.ExchangeEntriesRequest")
	proto.RegisterType((*ExchangeEntriesResponse)(nil), "proto.ExchangeEntriesResponse")
	proto.RegisterType((*GeneratePeerIDRequest)(nil), "proto.GeneratePeerIDRequest")
	proto.RegisterType((*GeneratePeerIDResponse)(nil), "proto.GeneratePeerIDResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProxyClient is the client API for Proxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyClient interface {
	Heartbeat(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	GeneratePeerID(ctx context.Context, in *GeneratePeerIDRequest, opts ...grpc.CallOption) (*GeneratePeerIDResponse, error)
	ExchangeEntriesStubRPC(ctx context.Context, in *ExchangeEntriesNotification, opts ...grpc.CallOption) (*Empty, error)
	ExchangeEntriesDriverRPC(ctx context.Context, in *ExchangeEntriesRequest, opts ...grpc.CallOption) (*ExchangeEntriesResponse, error)
	LookUpPeersRPC(ctx context.Context, in *LookUpPeerRequest, opts ...grpc.CallOption) (*LookUpPeerResponse, error)
	FetchPeersRPC(ctx context.Context, in *FetchPeersRequest, opts ...grpc.CallOption) (*FetchPeersResponse, error)
}

type proxyClient struct {
	cc *grpc.ClientConn
}

func NewProxyClient(cc *grpc.ClientConn) ProxyClient {
	return &proxyClient{cc}
}

func (c *proxyClient) Heartbeat(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Proxy/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyClient) GeneratePeerID(ctx context.Context, in *GeneratePeerIDRequest, opts ...grpc.CallOption) (*GeneratePeerIDResponse, error) {
	out := new(GeneratePeerIDResponse)
	err := c.cc.Invoke(ctx, "/proto.Proxy/GeneratePeerID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyClient) ExchangeEntriesStubRPC(ctx context.Context, in *ExchangeEntriesNotification, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Proxy/ExchangeEntriesStubRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyClient) ExchangeEntriesDriverRPC(ctx context.Context, in *ExchangeEntriesRequest, opts ...grpc.CallOption) (*ExchangeEntriesResponse, error) {
	out := new(ExchangeEntriesResponse)
	err := c.cc.Invoke(ctx, "/proto.Proxy/ExchangeEntriesDriverRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyClient) LookUpPeersRPC(ctx context.Context, in *LookUpPeerRequest, opts ...grpc.CallOption) (*LookUpPeerResponse, error) {
	out := new(LookUpPeerResponse)
	err := c.cc.Invoke(ctx, "/proto.Proxy/LookUpPeersRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyClient) FetchPeersRPC(ctx context.Context, in *FetchPeersRequest, opts ...grpc.CallOption) (*FetchPeersResponse, error) {
	out := new(FetchPeersResponse)
	err := c.cc.Invoke(ctx, "/proto.Proxy/FetchPeersRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Proxy service

type ProxyServer interface {
	Heartbeat(context.Context, *Empty) (*Empty, error)
	GeneratePeerID(context.Context, *GeneratePeerIDRequest) (*GeneratePeerIDResponse, error)
	ExchangeEntriesStubRPC(context.Context, *ExchangeEntriesNotification) (*Empty, error)
	ExchangeEntriesDriverRPC(context.Context, *ExchangeEntriesRequest) (*ExchangeEntriesResponse, error)
	LookUpPeersRPC(context.Context, *LookUpPeerRequest) (*LookUpPeerResponse, error)
	FetchPeersRPC(context.Context, *FetchPeersRequest) (*FetchPeersResponse, error)
}

func RegisterProxyServer(s *grpc.Server, srv ProxyServer) {
	s.RegisterService(&_Proxy_serviceDesc, srv)
}

func _Proxy_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Proxy/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).Heartbeat(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Proxy_GeneratePeerID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneratePeerIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).GeneratePeerID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Proxy/GeneratePeerID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).GeneratePeerID(ctx, req.(*GeneratePeerIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Proxy_ExchangeEntriesStubRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangeEntriesNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).ExchangeEntriesStubRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Proxy/ExchangeEntriesStubRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).ExchangeEntriesStubRPC(ctx, req.(*ExchangeEntriesNotification))
	}
	return interceptor(ctx, in, info, handler)
}

func _Proxy_ExchangeEntriesDriverRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangeEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).ExchangeEntriesDriverRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Proxy/ExchangeEntriesDriverRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).ExchangeEntriesDriverRPC(ctx, req.(*ExchangeEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Proxy_LookUpPeersRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookUpPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).LookUpPeersRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Proxy/LookUpPeersRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).LookUpPeersRPC(ctx, req.(*LookUpPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Proxy_FetchPeersRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchPeersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).FetchPeersRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Proxy/FetchPeersRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).FetchPeersRPC(ctx, req.(*FetchPeersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Proxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Proxy",
	HandlerType: (*ProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Heartbeat",
			Handler:    _Proxy_Heartbeat_Handler,
		},
		{
			MethodName: "GeneratePeerID",
			Handler:    _Proxy_GeneratePeerID_Handler,
		},
		{
			MethodName: "ExchangeEntriesStubRPC",
			Handler:    _Proxy_ExchangeEntriesStubRPC_Handler,
		},
		{
			MethodName: "ExchangeEntriesDriverRPC",
			Handler:    _Proxy_ExchangeEntriesDriverRPC_Handler,
		},
		{
			MethodName: "LookUpPeersRPC",
			Handler:    _Proxy_LookUpPeersRPC_Handler,
		},
		{
			MethodName: "FetchPeersRPC",
			Handler:    _Proxy_FetchPeersRPC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lr.proto",
}

func init() { proto.RegisterFile("lr.proto", fileDescriptor_lr_a41c565595dcb5ae) }

var fileDescriptor_lr_a41c565595dcb5ae = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x95, 0xa4, 0xf9, 0xe3, 0x69, 0x1a, 0xca, 0x4a, 0xb4, 0x6e, 0x68, 0x50, 0xe4, 0x0b,
	0x16, 0xa0, 0x1c, 0x8a, 0x78, 0x02, 0x62, 0x20, 0x15, 0xa0, 0xc8, 0xc0, 0x81, 0x53, 0xe5, 0xd8,
	0x43, 0xbb, 0xc2, 0xec, 0x9a, 0xdd, 0x0d, 0x6a, 0x9e, 0x8b, 0x1b, 0x4f, 0x87, 0xf6, 0x5f, 0xd3,
	0x38, 0xc9, 0xa1, 0x27, 0xfb, 0x9b, 0x6f, 0xe6, 0xb7, 0x9f, 0x67, 0x0d, 0xbd, 0x52, 0x4c, 0x2a,
	0xc1, 0x15, 0x27, 0x6d, 0xf3, 0x18, 0x1e, 0xe2, 0xaf, 0x4a, 0xad, 0x26, 0x5e, 0x30, 0x25, 0xbc,
	0x38, 0x12, 0xf8, 0x7b, 0x89, 0x52, 0x59, 0x19, 0xfd, 0x6b, 0xc0, 0xa3, 0x39, 0xa2, 0xb8, 0xe4,
	0x94, 0xa5, 0xd6, 0x21, 0xa7, 0xd0, 0xad, 0x10, 0xc5, 0x15, 0x2d, 0xc2, 0xc6, 0xb8, 0x11, 0xf7,
	0xd3, 0x8e, 0x96, 0xb3, 0x82, 0x9c, 0x41, 0xaf, 0xe4, 0x79, 0x56, 0x5e, 0xd1, 0x2a, 0x6c, 0x8e,
	0x1b, 0x71, 0x90, 0x76, 0x8d, 0x9e, 0x55, 0x64, 0x04, 0x60, 0xad, 0x8a, 0x0b, 0x15, 0xb6, 0x8c,
	0x19, 0x98, 0xca, 0x9c, 0x0b, 0x45, 0x86, 0xd0, 0x2b, 0x33, 0x45, 0xd5, 0xb2, 0xc0, 0xf0, 0x60,
	0xdc, 0x88, 0x9b, 0xe9, 0x9d, 0x26, 0xe7, 0x10, 0x94, 0x9c, 0x5d, 0x5b, 0xb3, 0x6d, 0xcc, 0x75,
	0x41, 0x4f, 0x9a, 0xa4, 0x39, 0x2f, 0xc3, 0x8e, 0xc1, 0xde, 0xe9, 0xe8, 0x15, 0x1c, 0xaf, 0xb3,
	0xcb, 0x8a, 0x33, 0x89, 0x24, 0x84, 0xae, 0x5c, 0xe6, 0x39, 0x4a, 0x69, 0xc2, 0xf7, 0x52, 0x2f,
	0xa3, 0xaf, 0xf0, 0x34, 0xb9, 0xcd, 0x6f, 0x32, 0x76, 0x8d, 0x09, 0x53, 0x82, 0xa2, 0xfc, 0xcc,
	0x15, 0xfd, 0x41, 0xf3, 0x4c, 0x51, 0xce, 0xc8, 0x1b, 0xe8, 0x17, 0x28, 0x15, 0x65, 0x46, 0xea,
	0xe9, 0x56, 0x7c, 0x78, 0xf1, 0xd8, 0xee, 0x69, 0x32, 0x17, 0xfc, 0x76, 0xa5, 0xc7, 0x56, 0xe9,
	0x46, 0x5b, 0x34, 0x85, 0x93, 0x1a, 0xd5, 0xaf, 0xf1, 0x05, 0x74, 0xd1, 0x56, 0x1c, 0xeb, 0xd8,
	0xb3, 0x10, 0x85, 0x45, 0xf9, 0x86, 0x28, 0x81, 0xd3, 0x2d, 0x8a, 0xfb, 0xa0, 0x87, 0x60, 0x5e,
	0xc2, 0x93, 0xf7, 0xc8, 0x50, 0x64, 0x0a, 0xb5, 0x3b, 0x9b, 0xfa, 0x2c, 0x04, 0x0e, 0x24, 0xa2,
	0xbd, 0xcf, 0x20, 0x35, 0xef, 0x51, 0x0c, 0x27, 0xf5, 0x66, 0x77, 0xe4, 0x00, 0x9a, 0xd4, 0xf7,
	0x36, 0x69, 0x71, 0xf1, 0xb7, 0x05, 0x6d, 0xb3, 0x00, 0xf2, 0x1c, 0x82, 0x0f, 0x98, 0x09, 0xb5,
	0xc0, 0x4c, 0x91, 0xbe, 0x0b, 0x92, 0xe8, 0x7f, 0x6d, 0xb8, 0xa1, 0xc8, 0x27, 0x18, 0x6c, 0xc2,
	0xc9, 0xb9, 0xf3, 0x77, 0x06, 0x1c, 0x8e, 0xf6, 0xb8, 0x2e, 0xd1, 0xe5, 0xd6, 0x96, 0xbf, 0xa8,
	0xe5, 0x22, 0x9d, 0xbf, 0x25, 0x91, 0x3f, 0x76, 0xff, 0xd5, 0xd6, 0xa2, 0x7d, 0x87, 0xb0, 0xd6,
	0x3c, 0x15, 0xf4, 0x0f, 0x0a, 0x4d, 0x1b, 0xed, 0xa6, 0xf9, 0x94, 0xcf, 0xf6, 0xd9, 0x2e, 0x66,
	0x02, 0x83, 0x8f, 0x9c, 0xff, 0xfc, 0x56, 0xe9, 0xf8, 0x52, 0x03, 0x43, 0x37, 0xb1, 0x2e, 0x7b,
	0xd6, 0xd9, 0x0e, 0xc7, 0x61, 0xa6, 0x70, 0xf4, 0x0e, 0x55, 0x7e, 0xb3, 0x45, 0xb9, 0x57, 0xad,
	0x51, 0xee, 0x3b, 0x96, 0xb2, 0xe8, 0x18, 0xe7, 0xf5, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x36,
	0xb5, 0xe4, 0x19, 0x1d, 0x04, 0x00, 0x00,
}
