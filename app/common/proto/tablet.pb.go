// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tablet.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LRJoinRequest struct {
	UniqueKey            string   `protobuf:"bytes,1,opt,name=unique_key,json=uniqueKey" json:"unique_key,omitempty"`
	GlobalPort           string   `protobuf:"bytes,2,opt,name=global_port,json=globalPort" json:"global_port,omitempty"`
	Latitude             float32  `protobuf:"fixed32,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude            float32  `protobuf:"fixed32,4,opt,name=longitude" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LRJoinRequest) Reset()         { *m = LRJoinRequest{} }
func (m *LRJoinRequest) String() string { return proto.CompactTextString(m) }
func (*LRJoinRequest) ProtoMessage()    {}
func (*LRJoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tablet_54eaa9a80d3b83e5, []int{0}
}
func (m *LRJoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LRJoinRequest.Unmarshal(m, b)
}
func (m *LRJoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LRJoinRequest.Marshal(b, m, deterministic)
}
func (dst *LRJoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LRJoinRequest.Merge(dst, src)
}
func (m *LRJoinRequest) XXX_Size() int {
	return xxx_messageInfo_LRJoinRequest.Size(m)
}
func (m *LRJoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LRJoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LRJoinRequest proto.InternalMessageInfo

func (m *LRJoinRequest) GetUniqueKey() string {
	if m != nil {
		return m.UniqueKey
	}
	return ""
}

func (m *LRJoinRequest) GetGlobalPort() string {
	if m != nil {
		return m.GlobalPort
	}
	return ""
}

func (m *LRJoinRequest) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *LRJoinRequest) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type LookUpRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookUpRequest) Reset()         { *m = LookUpRequest{} }
func (m *LookUpRequest) String() string { return proto.CompactTextString(m) }
func (*LookUpRequest) ProtoMessage()    {}
func (*LookUpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tablet_54eaa9a80d3b83e5, []int{1}
}
func (m *LookUpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookUpRequest.Unmarshal(m, b)
}
func (m *LookUpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookUpRequest.Marshal(b, m, deterministic)
}
func (dst *LookUpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookUpRequest.Merge(dst, src)
}
func (m *LookUpRequest) XXX_Size() int {
	return xxx_messageInfo_LookUpRequest.Size(m)
}
func (m *LookUpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookUpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookUpRequest proto.InternalMessageInfo

func (m *LookUpRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type LREntries struct {
	Entries              []*LREntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LREntries) Reset()         { *m = LREntries{} }
func (m *LREntries) String() string { return proto.CompactTextString(m) }
func (*LREntries) ProtoMessage()    {}
func (*LREntries) Descriptor() ([]byte, []int) {
	return fileDescriptor_tablet_54eaa9a80d3b83e5, []int{2}
}
func (m *LREntries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LREntries.Unmarshal(m, b)
}
func (m *LREntries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LREntries.Marshal(b, m, deterministic)
}
func (dst *LREntries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LREntries.Merge(dst, src)
}
func (m *LREntries) XXX_Size() int {
	return xxx_messageInfo_LREntries.Size(m)
}
func (m *LREntries) XXX_DiscardUnknown() {
	xxx_messageInfo_LREntries.DiscardUnknown(m)
}

var xxx_messageInfo_LREntries proto.InternalMessageInfo

func (m *LREntries) GetEntries() []*LREntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*LRJoinRequest)(nil), "proto.LRJoinRequest")
	proto.RegisterType((*LookUpRequest)(nil), "proto.LookUpRequest")
	proto.RegisterType((*LREntries)(nil), "proto.LREntries")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TabletClient is the client API for Tablet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TabletClient interface {
	LRJoinRPC(ctx context.Context, in *LRJoinRequest, opts ...grpc.CallOption) (*LREntry, error)
	LookUpRPC(ctx context.Context, in *LookUpRequest, opts ...grpc.CallOption) (*LREntry, error)
	LookUpPeer(ctx context.Context, in *LookUpPeerRequest, opts ...grpc.CallOption) (*LookUpPeerResponse, error)
}

type tabletClient struct {
	cc *grpc.ClientConn
}

func NewTabletClient(cc *grpc.ClientConn) TabletClient {
	return &tabletClient{cc}
}

func (c *tabletClient) LRJoinRPC(ctx context.Context, in *LRJoinRequest, opts ...grpc.CallOption) (*LREntry, error) {
	out := new(LREntry)
	err := c.cc.Invoke(ctx, "/proto.Tablet/LRJoinRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tabletClient) LookUpRPC(ctx context.Context, in *LookUpRequest, opts ...grpc.CallOption) (*LREntry, error) {
	out := new(LREntry)
	err := c.cc.Invoke(ctx, "/proto.Tablet/LookUpRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tabletClient) LookUpPeer(ctx context.Context, in *LookUpPeerRequest, opts ...grpc.CallOption) (*LookUpPeerResponse, error) {
	out := new(LookUpPeerResponse)
	err := c.cc.Invoke(ctx, "/proto.Tablet/LookUpPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Tablet service

type TabletServer interface {
	LRJoinRPC(context.Context, *LRJoinRequest) (*LREntry, error)
	LookUpRPC(context.Context, *LookUpRequest) (*LREntry, error)
	LookUpPeer(context.Context, *LookUpPeerRequest) (*LookUpPeerResponse, error)
}

func RegisterTabletServer(s *grpc.Server, srv TabletServer) {
	s.RegisterService(&_Tablet_serviceDesc, srv)
}

func _Tablet_LRJoinRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LRJoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TabletServer).LRJoinRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Tablet/LRJoinRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TabletServer).LRJoinRPC(ctx, req.(*LRJoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tablet_LookUpRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TabletServer).LookUpRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Tablet/LookUpRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TabletServer).LookUpRPC(ctx, req.(*LookUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tablet_LookUpPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookUpPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TabletServer).LookUpPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Tablet/LookUpPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TabletServer).LookUpPeer(ctx, req.(*LookUpPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tablet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Tablet",
	HandlerType: (*TabletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LRJoinRPC",
			Handler:    _Tablet_LRJoinRPC_Handler,
		},
		{
			MethodName: "LookUpRPC",
			Handler:    _Tablet_LookUpRPC_Handler,
		},
		{
			MethodName: "LookUpPeer",
			Handler:    _Tablet_LookUpPeer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tablet.proto",
}

func init() { proto.RegisterFile("tablet.proto", fileDescriptor_tablet_54eaa9a80d3b83e5) }

var fileDescriptor_tablet_54eaa9a80d3b83e5 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4e, 0x83, 0x40,
	0x10, 0xc6, 0xb3, 0x54, 0xab, 0x0c, 0xd2, 0xc3, 0xc6, 0x03, 0x12, 0x4d, 0x09, 0x27, 0x4e, 0x4d,
	0xac, 0xf1, 0x01, 0x8c, 0xf1, 0xa2, 0x1c, 0xc8, 0x46, 0xcf, 0x0d, 0x84, 0x49, 0xb3, 0x29, 0xd9,
	0xa5, 0xcb, 0x72, 0xe0, 0x11, 0x7c, 0x1c, 0xdf, 0xd0, 0x74, 0x47, 0x2a, 0xfe, 0x39, 0xc1, 0x7c,
	0xdf, 0xfc, 0x26, 0xdf, 0xb7, 0x70, 0x61, 0xcb, 0xaa, 0x41, 0xbb, 0x6a, 0x8d, 0xb6, 0x9a, 0x9f,
	0xba, 0x4f, 0x1c, 0x1a, 0xdc, 0xf7, 0xd8, 0x7d, 0xa9, 0x71, 0x80, 0xca, 0x9a, 0x81, 0x86, 0xf4,
	0x9d, 0x41, 0x98, 0x8b, 0x67, 0x2d, 0x95, 0xa0, 0x25, 0x7e, 0x03, 0xd0, 0x2b, 0xb9, 0xef, 0x71,
	0xb3, 0xc3, 0x21, 0x62, 0x09, 0xcb, 0x7c, 0xe1, 0x93, 0xf2, 0x82, 0x03, 0x5f, 0x42, 0xb0, 0x6d,
	0x74, 0x55, 0x36, 0x9b, 0x56, 0x1b, 0x1b, 0x79, 0xce, 0x07, 0x92, 0x0a, 0x6d, 0x2c, 0x8f, 0xe1,
	0xbc, 0x29, 0xad, 0xb4, 0x7d, 0x8d, 0xd1, 0x2c, 0x61, 0x99, 0x27, 0x8e, 0x33, 0xbf, 0x06, 0xbf,
	0xd1, 0x6a, 0x4b, 0xe6, 0x89, 0x33, 0xbf, 0x85, 0x74, 0x09, 0x61, 0xae, 0xf5, 0xee, 0xad, 0x1d,
	0xa3, 0x2c, 0xc0, 0x93, 0xb5, 0x8b, 0x10, 0x0a, 0x4f, 0xd6, 0xe9, 0x3d, 0xf8, 0xb9, 0x78, 0x52,
	0xd6, 0x48, 0xec, 0x78, 0x06, 0x67, 0x48, 0xbf, 0x11, 0x4b, 0x66, 0x59, 0xb0, 0x5e, 0x50, 0xa5,
	0x15, 0xad, 0x0c, 0x62, 0xb4, 0xd7, 0x1f, 0x0c, 0xe6, 0xaf, 0xee, 0x5d, 0xf8, 0xed, 0xe1, 0x82,
	0x6b, 0x5b, 0x3c, 0xf2, 0xcb, 0x23, 0x30, 0xe9, 0x1f, 0xff, 0x3a, 0xe3, 0x10, 0x4a, 0x35, 0x45,
	0xa6, 0x39, 0xff, 0x20, 0x0f, 0x00, 0xb4, 0x50, 0x20, 0x1a, 0x1e, 0xfd, 0x60, 0x0e, 0xd2, 0xc8,
	0x5d, 0xfd, 0xe3, 0x74, 0xad, 0x56, 0x1d, 0x56, 0x73, 0xe7, 0xdc, 0x7d, 0x06, 0x00, 0x00, 0xff,
	0xff, 0xbe, 0x1a, 0x65, 0x52, 0xd1, 0x01, 0x00, 0x00,
}
